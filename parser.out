Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AMPERSANT
    COMMENTBLOCK
    COMMENTLINE
    COS
    DISTINT
    DIV
    DOWNTO
    ELSE
    EXP
    FALSE
    FOR
    FUNCTION
    GOTO
    HASHTAG
    INPUT
    LN
    NIL
    OUTPUT
    POT
    PROCEDURE
    QUOT
    READ
    REPEAT
    SIN
    SQR
    SQRT
    STRING
    TO
    TRUE
    TYPE
    UNTIL
    USES
    WHILE
    WITH
    WRITE

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID program_heading SEMICOLON block DOT
Rule 2     program_heading -> LPAREN identifier_list RPAREN
Rule 3     identifier_list -> ID
Rule 4     identifier_list -> identifier_list COMMA ID
Rule 5     block -> block1
Rule 6     block -> label_declaration SEMICOLON block1
Rule 7     block1 -> block2
Rule 8     block1 -> constant_declaration SEMICOLON block2
Rule 9     block2 -> block3
Rule 10    block2 -> type_declaration SEMICOLON block3
Rule 11    block3 -> block4
Rule 12    block3 -> variable_declaration SEMICOLON block4
Rule 13    block4 -> block5
Rule 14    block4 -> proc_and_func_declaration SEMICOLON block5
Rule 15    block5 -> BEGIN statement_list statement
Rule 16    label_declaration -> LABEL NUMBER
Rule 17    label_declaration -> label_declaration COMMA NUMBER
Rule 18    constant_declaration -> CONST ID EQUAL constant
Rule 19    constant_declaration -> constant_declaration SEMICOLON ID EQUAL constant
Rule 20    type_declaration -> type ID EQUAL type
Rule 21    type_declaration -> type_declaration SEMICOLON ID EQUAL type
Rule 22    variable_declaration -> VAR variableid_list COLON type
Rule 23    variable_declaration -> variable_declaration SEMICOLON variableid_list COLON type
Rule 24    variableid_list -> ID
Rule 25    variableid_list -> variableid_list COMMA ID
Rule 26    constant -> INTEGER
Rule 27    constant -> REAL
Rule 28    constant -> CHAR
Rule 29    constant -> BOOLEAN
Rule 30    type -> simple_type
Rule 31    type -> structured_type
Rule 32    type -> typeid
Rule 33    simple_type -> LPAREN indentifierid_list RPAREN
Rule 34    simple_type -> constant DOT DOT DOT constant
Rule 35    simple_type -> typeid
Rule 36    structured_type -> ARRAY LBLOCK index_list RBLOCK OF type
Rule 37    structured_type -> RECORD field_list END
Rule 38    structured_type -> SET OF simple_type
Rule 39    structured_type -> FILE OF type
Rule 40    structured_type -> PACKED structured_type
Rule 41    index_list -> simple_type
Rule 42    index_list -> index_list COMMA simple_type
Rule 43    index_list -> fixed_part
Rule 44    index_list -> fixed_part SEMICOLON variant_part
Rule 45    index_list -> variant_part
Rule 46    fixed_part -> record_field
Rule 47    fixed_part -> fixed_part SEMICOLON record_field
Rule 48    record_field -> empty
Rule 49    record_field -> field_list COLON type
Rule 50    fieldid_list -> ID
Rule 51    fieldid_list -> fieldid_list COMMA ID
Rule 52    variant_part -> CASE tag_field OF variant_list
Rule 53    tag_field -> typeid
Rule 54    tag_field -> identifier COLON typeid
Rule 55    variant_list -> variant
Rule 56    variant_list -> variant_list SEMICOLON variant
Rule 57    variant -> empty
Rule 58    variant -> case_label_list COLON LPAREN field_list RPAREN
Rule 59    case_label_list -> constant
Rule 60    case_label_list -> case_label_list COMMA constant
Rule 61    proc_and_func_declaration -> proc_or_func
Rule 62    proc_and_func_declaration -> proc_and_func_declaration SEMICOLON proc_or_func
Rule 63    proc_or_func -> procedure identifier parametersopt SEMICOLON block_or_forward
Rule 64    proc_or_func -> function identifier parametersopt COLON typeid SEMICOLON block_or_forward
Rule 65    block_or_forward -> block
Rule 66    block_or_forward -> forward
Rule 67    parameters -> LPAREN formal_parameter_list RPAREN
Rule 68    formal_parameter_list -> formal_parameter_section
Rule 69    formal_parameter_list -> formal_parameter_list SEMICOLON formal_parameter_section
Rule 70    formal_parameter_section -> parameterid_list COLON typeid
Rule 71    formal_parameter_section -> var parameterid_list COLON typeid
Rule 72    formal_parameter_section -> procedure identifier parametersopt
Rule 73    formal_parameter_section -> function identifier parametersopt COLON typeid
Rule 74    parameterid_list -> identifier
Rule 75    parameterid_list -> parameterid_list COMMA identifier
Rule 76    statement_list -> statement
Rule 77    statement_list -> statement_list SEMICOLON statement
Rule 78    statement -> empty
Rule 79    statement -> variable EQUAL expression
Rule 80    statement -> begin statement_list END
Rule 81    statement -> IF expression THEN statement
Rule 82    statement -> IF expression THEN statement else statement
Rule 83    statement -> case expression OF case_list END
Rule 84    statement -> while expression DO statement
Rule 85    statement -> repeat statement_list until expression
Rule 86    statement -> for varid EQUAL for_list DO statement
Rule 87    statement -> procid
Rule 88    statement -> procid LPAREN expression_list RPAREN
Rule 89    statement -> goto label
Rule 90    statement -> with record_variable_list DO statement
Rule 91    statement -> label COLON statement
Rule 92    variable -> identifier
Rule 93    variable -> variable LBRACKET subscript_list RBRACKET
Rule 94    variable -> variable COMMA fieldid
Rule 95    variable -> variable
Rule 96    subscript_list -> expression
Rule 97    subscript_list -> subscript_list COMMA expression
Rule 98    case_list -> case_label_list COLON statement
Rule 99    case_list -> case_list SEMICOLON case_label_list COLON statement
Rule 100   for_list -> expression to expression
Rule 101   for_list -> expression downto expression
Rule 102   expression_list -> expression
Rule 103   expression_list -> expression_list COMMA expression
Rule 104   label -> unsigned_integer
Rule 105   record_variable_list -> variable
Rule 106   record_variable_list -> record_variable_list COMMA variable
Rule 107   expression -> expression relational_op additive_expression
Rule 108   expression -> additive_expression
Rule 109   relational_op -> one OF
Rule 110   relational_op -> LESS LESSEQUAL EQUAL DEQUAL GREATEREQUAL GREATER
Rule 111   additive_expression -> additive_expression additive_op multiplicative_expression
Rule 112   additive_expression -> multiplicative_expression
Rule 113   additive_op -> one OF
Rule 114   additive_op -> PLUS MINUS OR
Rule 115   multiplicative_expression -> multiplicative_expression multiplicative_op unary_expression
Rule 116   multiplicative_expression -> unary_expression
Rule 117   multiplicative_op -> one OF
Rule 118   multiplicative_op -> TIMES DIVIDE div MOD AND IN
Rule 119   unary_expression -> unary_op unary_expression
Rule 120   unary_expression -> primary_expression
Rule 121   unary_op -> one OF
Rule 122   unary_op -> PLUS MINUS not
Rule 123   primary_expression -> variable
Rule 124   primary_expression -> unsigned_integer
Rule 125   primary_expression -> unsigned_real
Rule 126   primary_expression -> string
Rule 127   primary_expression -> nil
Rule 128   primary_expression -> funcid LPAREN expression_list RPAREN
Rule 129   primary_expression -> LBRACKET element_list RBRACKET
Rule 130   primary_expression -> LPAREN expression RPAREN
Rule 131   element_list -> empty
Rule 132   element_list -> element
Rule 133   element_list -> element_list COMMA element
Rule 134   element -> expression
Rule 135   element -> expression DOT DOT DOT expression
Rule 136   constid -> identifier
Rule 137   typeid -> identifier
Rule 138   funcid -> identifier
Rule 139   procid -> identifier
Rule 140   fieldid -> identifier
Rule 141   varid -> identifier

Terminals, with rules where they appear

AMPERSANT            : 
ARRAY                : 36
BEGIN                : 15
BOOLEAN              : 29
CASE                 : 52
CHAR                 : 28
COLON                : 22 23 49 54 58 64 70 71 73 91 98 99
COMMA                : 4 17 25 42 51 60 75 94 97 103 106 133
COMMENTBLOCK         : 
COMMENTLINE          : 
CONST                : 18
COS                  : 
DEQUAL               : 110
DISTINT              : 
DIV                  : 
DIVIDE               : 118
DO                   : 84 86 90
DOT                  : 1 34 34 34 135 135 135
DOWNTO               : 
ELSE                 : 
END                  : 37 80 83
EQUAL                : 18 19 20 21 79 86 110
EXP                  : 
FALSE                : 
FILE                 : 39
FOR                  : 
FUNCTION             : 
GOTO                 : 
GREATER              : 110
GREATEREQUAL         : 110
HASHTAG              : 
ID                   : 1 3 4 18 19 20 21 24 25 50 51
IF                   : 81 82
INPUT                : 
INTEGER              : 26
LABEL                : 16
LBLOCK               : 36
LBRACKET             : 93 129
LESS                 : 110
LESSEQUAL            : 110
LN                   : 
LPAREN               : 2 33 58 67 88 128 130
MINUS                : 114 122
MOD                  : 118
NIL                  : 
NUMBER               : 16 17
OF                   : 36 38 39 52 83 109 113 117 121
OUTPUT               : 
PACKED               : 40
PLUS                 : 114 122
POT                  : 
PROCEDURE            : 
PROGRAM              : 1
QUOT                 : 
RBLOCK               : 36
RBRACKET             : 93 129
READ                 : 
REAL                 : 27
RECORD               : 37
REPEAT               : 
RPAREN               : 2 33 58 67 88 128 130
SEMICOLON            : 1 6 8 10 12 14 19 21 23 44 47 56 62 63 64 69 77 99
SET                  : 38
SIN                  : 
SQR                  : 
SQRT                 : 
STRING               : 
THEN                 : 81 82
TIMES                : 118
TO                   : 
TRUE                 : 
TYPE                 : 
UNTIL                : 
USES                 : 
VAR                  : 22
WHILE                : 
WITH                 : 
WRITE                : 
error                : 

Nonterminals, with rules where they appear

AND                  : 118
IN                   : 118
OR                   : 114
additive_expression  : 107 108 111
additive_op          : 111
begin                : 80
block                : 1 65
block1               : 5 6
block2               : 7 8
block3               : 9 10
block4               : 11 12
block5               : 13 14
block_or_forward     : 63 64
case                 : 83
case_label_list      : 58 60 98 99
case_list            : 83 99
constant             : 18 19 34 34 59 60
constant_declaration : 8 19
constid              : 
div                  : 118
downto               : 101
element              : 132 133
element_list         : 129 133
else                 : 82
empty                : 48 57 78 131
expression           : 79 81 82 83 84 85 96 97 100 100 101 101 102 103 107 130 134 135 135
expression_list      : 88 103 128
field_list           : 37 49 58
fieldid              : 94
fieldid_list         : 51
fixed_part           : 43 44 47
for                  : 86
for_list             : 86
formal_parameter_list : 67 69
formal_parameter_section : 68 69
forward              : 66
funcid               : 128
function             : 64 73
goto                 : 89
identifier           : 54 63 64 72 73 74 75 92 136 137 138 139 140 141
identifier_list      : 2 4
indentifierid_list   : 33
index_list           : 36 42
label                : 89 91
label_declaration    : 6 17
multiplicative_expression : 111 112 115
multiplicative_op    : 115
nil                  : 127
not                  : 122
one                  : 109 113 117 121
parameterid_list     : 70 71 75
parameters           : 
parametersopt        : 63 64 72 73
primary_expression   : 120
proc_and_func_declaration : 14 62
proc_or_func         : 61 62
procedure            : 63 72
procid               : 87 88
program              : 0
program_heading      : 1
record_field         : 46 47
record_variable_list : 90 106
relational_op        : 107
repeat               : 85
simple_type          : 30 38 41 42
statement            : 15 76 77 81 82 82 84 86 90 91 98 99
statement_list       : 15 77 80 85
string               : 126
structured_type      : 31 40
subscript_list       : 93 97
tag_field            : 52
to                   : 100
type                 : 20 20 21 22 23 36 39 49
type_declaration     : 10 21
typeid               : 32 35 53 54 64 70 71 73
unary_expression     : 115 116 119
unary_op             : 119
unsigned_integer     : 104 124
unsigned_real        : 125
until                : 85
var                  : 71
variable             : 79 93 94 95 105 106 123
variable_declaration : 12 23
variableid_list      : 22 23 25
variant              : 55 56
variant_list         : 52 56
variant_part         : 44 45
varid                : 86
while                : 84
with                 : 90

